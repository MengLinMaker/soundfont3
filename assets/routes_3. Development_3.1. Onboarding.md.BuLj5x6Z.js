import{_ as s,c as e,o as i,a3 as a}from"./chunks/framework.z7kdJ_yr.js";const g=JSON.parse('{"title":"Onboarding","description":"","frontmatter":{},"headers":[],"relativePath":"routes/3. Development/3.1. Onboarding.md","filePath":"routes/3. Development/3.1. Onboarding.md","lastUpdated":null}'),t={name:"routes/3. Development/3.1. Onboarding.md"},n=a('<h1 id="onboarding" tabindex="-1">Onboarding <a class="header-anchor" href="#onboarding" aria-label="Permalink to &quot;Onboarding&quot;">​</a></h1><p>The library uses <code>Node.js</code>, <code>TypeScript</code> and <code>Webpack</code> for development, <code>Jest</code> to run unit tests, <code>ESLint</code> for linting the source code and <code>Prettier</code> for the code style.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><ol><li>Clone the repository.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/musidi-org/soundfont3.git</span></span></code></pre></div><ol start="2"><li>Install the dependencies.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span></span></code></pre></div><ol start="3"><li>Build the files.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h2 id="running-unit-tests" tabindex="-1">Running Unit Tests <a class="header-anchor" href="#running-unit-tests" aria-label="Permalink to &quot;Running Unit Tests&quot;">​</a></h2><p>The library uses <code>Jest</code> for unit tests. This is done automatically before committing, to prevent any bugs, but you can also run <code>Jest</code> manually.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h2 id="linting" tabindex="-1">Linting <a class="header-anchor" href="#linting" aria-label="Permalink to &quot;Linting&quot;">​</a></h2><p>Files are linted with <code>ESLint</code>. This is done automatically before committing, to ensure a consistent code base, but you can also run <code>ESLint</code> manually.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint</span></span></code></pre></div><h2 id="code-style" tabindex="-1">Code Style <a class="header-anchor" href="#code-style" aria-label="Permalink to &quot;Code Style&quot;">​</a></h2><p>The library uses <code>Prettier</code> to ensure a consistent code style. The <code>Prettier</code> settings can be found in <a href="https://github.com/Mrtenz/SoundFont3/blob/master/.prettierrc" target="_blank" rel="noreferrer">this file</a>. It is automatically run before committing, but you can also run <code>Prettier</code> manually.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prettier</span></span></code></pre></div>',18),l=[n];function o(h,d,p,r,c,u){return i(),e("div",null,l)}const b=s(t,[["render",o]]);export{g as __pageData,b as default};
