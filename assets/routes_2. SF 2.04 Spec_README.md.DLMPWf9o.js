import{_ as e,c as a,o as t,a3 as o}from"./chunks/framework.z7kdJ_yr.js";const F=JSON.parse('{"title":"SoundFont 2.04 Specification","description":"","frontmatter":{"prev":{"text":"1.2. Play SoundFont","link":"/routes/1.%20Guide/1.2.%20Play%20SoundFont.html"},"next":{"text":"2.1. SF 2.04 Spec","link":"/routes/2.%20SF%202.04%20Spec/2.1.%20Metadata.html"}},"headers":[],"relativePath":"routes/2. SF 2.04 Spec/README.md","filePath":"routes/2. SF 2.04 Spec/README.md","lastUpdated":1719160364000}'),i={name:"routes/2. SF 2.04 Spec/README.md"},s=o(`<h1 id="soundfont-2-04-specification" tabindex="-1">SoundFont 2.04 Specification <a class="header-anchor" href="#soundfont-2-04-specification" aria-label="Permalink to &quot;SoundFont 2.04 Specification&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Purpose</p><p>To understand the library API according to <a href="http://www.synthfont.com/sfspec24.pdf" target="_blank" rel="noreferrer">SoundFont 2.04</a> specification.</p><p>This section will alternate between specification summary and API documentation.</p></div><p>SoundFonts are <a href="https://johnloomis.org/cpe102/asgn/asgn1/riff.html" target="_blank" rel="noreferrer">RIFF</a> files containing WAV samples, preset information and metadata. SoundFonts interact with <a href="https://en.wikipedia.org/wiki/General_MIDI" target="_blank" rel="noreferrer">MIDI</a> to create a sound.</p><h2 id="what-is-riff" tabindex="-1">What is RIFF <a class="header-anchor" href="#what-is-riff" aria-label="Permalink to &quot;What is RIFF&quot;">​</a></h2><p>RIFF is like JSON but binary - store nested binaries. It is a standard for other file formats like <a href="https://en.wikipedia.org/wiki/WAV" target="_blank" rel="noreferrer">WAV</a>.</p><p>Data is stored in chunks with metadata:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]            chunkId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;RIFF&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           chunkBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   21772728</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]            format         </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sfbk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte if subchunk exists</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[chunkBytes]   chunkData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">anotherChunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li><code>chunkId</code> is a <a href="https://en.wikipedia.org/wiki/FourCC" target="_blank" rel="noreferrer">four-character code (FourCC)</a> totalling 4 bytes. <ul><li>Only trunk chunks with id <code>RIFF</code> and <code>LIST</code> can have subchunks, hence 12 byte metadata.</li><li>Leaf chunks have 8 byte metadata since format is not required.</li></ul></li><li><code>chunkBytes</code> is the amount of bytes in a chunk.</li><li><code>format</code> specifies format type since <code>chunkId</code> is already used for tracking subchunks.</li><li><code>chunkData</code> could be a a subchunk or contain data.</li><li>All chunks must contain even number of bytes.</li></ul><h2 id="soundfont-riff-structure" tabindex="-1">SoundFont RIFF structure <a class="header-anchor" href="#soundfont-riff-structure" aria-label="Permalink to &quot;SoundFont RIFF structure&quot;">​</a></h2><p>Every SoundFont2 contain three nested top chunks:</p><p>ChunkId <code>RIFF</code>, format <code>sfbk</code> - RIFF file declaration</p><ul><li>ChunkId <code>LIST</code></li><li>Format <code>INFO</code></li><li>Contains <strong><em><code>SoundFont3.metadata</code></em></strong> and: <ul><li>ChunkId <code>LIST</code></li><li>Format <code>sdta</code></li><li>Contains <strong><em><code>SoundFont3.sampleData</code></em></strong> and: <ul><li>ChunkId <code>LIST</code></li><li>Format <code>pdta</code></li><li>Contains <strong><em><code>SoundFont3.presetData</code></em></strong></li></ul></li></ul></li></ul><p>Raw SoundFont RIFF chunks are accessed through <code>SoundFont3.chunk</code>.</p><h2 id="metadata" tabindex="-1">Metadata <a class="header-anchor" href="#metadata" aria-label="Permalink to &quot;Metadata&quot;">​</a></h2><p>Accessible thorugh <code>SoundFont3.metaData</code></p><ul><li><p><code>ifil</code> - SoundFont version - <code>SoundFont3.metaData.version</code></p></li><li><p><code>isng</code> - Sound engine - <code>SoundFont3.metaData.soundEngine</code></p></li><li><p><code>INAM</code> - SoundFont bank - <code>SoundFont3.metaData.name</code></p><p><strong><em>The other leaf chunks are optional</em></strong></p></li><li><p><code>irom</code> - Sound ROM samples reference - <code>SoundFont3.metaData.rom</code></p></li><li><p><code>iver</code> - Sound ROM revision - <code>SoundFont3.metaData.romVersion</code></p></li><li><p><code>ICRD</code> - Creation mm/dd/yy - <code>SoundFont3.metaData.creationDate</code></p></li><li><p><code>IENG</code> - SoundFont author - <code>SoundFont3.metaData.author</code></p></li><li><p><code>IPDR</code> - For this product - <code>SoundFont3.metaData.product</code></p></li><li><p><code>ICOP</code> - Copyright - <code>SoundFont3.metaData.copyright</code></p></li><li><p><code>ICMT</code> - Comments - <code>SoundFont3.metaData.comments</code></p></li><li><p><code>ISFT</code> - Tool created SoundFont - <code>SoundFont3.metaData.createdBy</code></p></li></ul><h2 id="sample-data" tabindex="-1">Sample data <a class="header-anchor" href="#sample-data" aria-label="Permalink to &quot;Sample data&quot;">​</a></h2><ul><li><p><code>smpl</code> - 16-bit WAV - <code>SoundFont3.sampleData</code></p></li><li><p><code>sm24</code> - Plus 8-bit WAV</p></li></ul><h2 id="preset-data" tabindex="-1">Preset data <a class="header-anchor" href="#preset-data" aria-label="Permalink to &quot;Preset data&quot;">​</a></h2><p>Available through <code>SoundFont3.presetData</code></p><p><strong>Preset metadata:</strong></p><ul><li><p><code>phdr</code> - Headers - <code>SoundFont3.presetData.presetHeaders</code></p></li><li><p><code>pbag</code> - Zone indices - <code>SoundFont3.presetData.presetZones</code></p></li><li><p><code>pmod</code> - Modulators - <code>SoundFont3.presetData.presetModulators</code></p></li><li><p><code>pgen</code> - Generators - <code>SoundFont3.presetData.presetGenerators</code></p></li></ul><p><strong>Instrument metadata:</strong></p><ul><li><p><code>inst</code> - Headers - <code>SoundFont3.presetData.instrumentHeaders</code></p></li><li><p><code>ibag</code> - Zone indices - <code>SoundFont3.presetData.instrumentZones</code></p></li><li><p><code>imod</code> - Modulators - <code>SoundFont3.presetData.instrumentModulators</code></p></li><li><p><code>igen</code> - Generators - <code>SoundFont3.presetData.instrumentGenerators</code></p></li></ul><p><strong>Sample metadata:</strong></p><ul><li><code>shdr</code> - Headers - <code>SoundFont3.presetData.sampleHeaders</code></li></ul>`,26),n=[s];function d(r,l,c,p,h,u){return t(),a("div",null,n)}const m=e(i,[["render",d]]);export{F as __pageData,m as default};
