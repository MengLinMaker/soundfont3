import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.z7kdJ_yr.js";const t="/assets/MIDI-modulator.DzUs7DZ5.png",n="/assets/MIDI-generator.BL--BZnx.png",E=JSON.parse('{"title":"Preset data","description":"","frontmatter":{"prev":{"text":"2.2. Sample data","link":"/routes/2.%20SF%202.04%20Spec/2.2.%20Sample%20data.html"},"next":{"text":"3. SF 3 Spec","link":"/routes/3.%20SF%203%20Spec/README.html"}},"headers":[],"relativePath":"routes/2. SF 2.04 Spec/2.3. Preset data.md","filePath":"routes/2. SF 2.04 Spec/2.3. Preset data.md","lastUpdated":1719191130000}'),h={name:"routes/2. SF 2.04 Spec/2.3. Preset data.md"},p=e(`<h1 id="preset-data" tabindex="-1">Preset data <a class="header-anchor" href="#preset-data" aria-label="Permalink to &quot;Preset data&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Prerequisite</p><p>This section requires a <a href="/routes/2. SF 2.04 Spec/README.html">basic understanding of SoundFont 2.04</a> and binary.</p></div><p>SoundFont preset data is accessible through <code>SoundFont3.presetData</code>. There are 9 mandatory chunks, named the <code>&quot;HYDRA structure&quot;</code> in the spec.</p><p>Preset data contains references that form a graph structure:</p><div style="background:WhiteSmoke;padding:1em;border-radius:0.5em;"><p><img src="https://i.imgur.com/c2Gud3u.png" alt="General Structure"></p></div><ul><li>Multiple <code>preset zones</code> can reference one <code>instrument</code>.</li><li>Likewise, multiple <code>instrument zones</code> can reference one <code>sample</code>.</li></ul><h2 id="preprocessed-data" tabindex="-1">Preprocessed data <a class="header-anchor" href="#preprocessed-data" aria-label="Permalink to &quot;Preprocessed data&quot;">​</a></h2><p>Preset data that are parsed into an array can be accessed accordingly:</p><ul><li>Banks - <code>SoundFont3.banks</code></li><li>Presets - <code>SoundFont3.presets</code></li><li>Instruments - <code>SoundFont3.instruments</code></li><li>Samples - <code>SoundFont3.samples</code></li></ul><h2 id="phdr-preset-headers" tabindex="-1"><code>phdr</code> - Preset headers <a class="header-anchor" href="#phdr-preset-headers" aria-label="Permalink to &quot;\`phdr\` - Preset headers&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.presetHeaders</code></p><p>This chunk contains preset info with one record per preset. <code>library</code>, <code>genre</code> and <code>morphology</code> are reserved for future library management - not currently used.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] presetName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;presetName&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 20 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> presetNumber </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bankNumber </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 127</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte - 127 or 128</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> presetZoneId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> library </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> genre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> morphology </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 38 byte total</span></span></code></pre></div><p>A terminal record is required to signify end of <code>phdr</code> chunk. All values are zero except:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] presetName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;EOP&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Indicate end of chunck</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> presetZoneId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Number of preset zones</span></span></code></pre></div><h2 id="pbag-preset-zone-indices" tabindex="-1"><code>pbag</code> - Preset zone indices <a class="header-anchor" href="#pbag-preset-zone-indices" aria-label="Permalink to &quot;\`pbag\` - Preset zone indices&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.presetZones</code></p><p>List preset zones. The generator is the output of the modulator.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> generatorId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 4 byte total</span></span></code></pre></div><h2 id="pmod-preset-modulators" tabindex="-1"><code>pmod</code> - Preset modulators <a class="header-anchor" href="#pmod-preset-modulators" aria-label="Permalink to &quot;\`pmod\` - Preset modulators&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.presetModulators</code></p><p>Defines a preset modulator, which is represented by the following calculation and diagram:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmath::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(primarySource);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmath::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modulatorDestination);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorDestination </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  modulatorTransform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modulatorGain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div style="padding:1em;border-radius:0.5em;"><p><img src="`+t+`" alt="MIDI modulator control diagram"></p></div><p>MIDI commands can be used as input for modulators. Only official MIDI commands can be used with SoundFont. Popular commands include:</p><ul><li>MIDI CC64 - Sustain pedal</li><li>MIDI CC66 - Soft pedal</li><li>MIDI CC67 - Sostenuto pedal</li></ul><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorSourceId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorDestinationId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorGain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorGainSourceId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorTransformId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 10 byte total</span></span></code></pre></div><h2 id="pgen-preset-generators" tabindex="-1"><code>pgen</code> - Preset generators <a class="header-anchor" href="#pgen-preset-generators" aria-label="Permalink to &quot;\`pgen\` - Preset generators&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.presetGenerators</code></p><p>Defines a preset generator which is a modulator node. This node can be referenced to create a graph of modulators:</p><div style="padding:1em;border-radius:0.5em;"><p><img src="`+n+`" alt="MIDI generator node"></p></div><p>Generators may specify a range of MIDI keys or velocities. Some generators only specify a signed 16-bit value.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Then any of the combination below:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minValue  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 1 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxValue  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 1 byte</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amount1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  amount2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 4 byte</span></span></code></pre></div><hr><p> </p><h2 id="inst-instrument-headers" tabindex="-1"><code>inst</code> - Instrument headers <a class="header-anchor" href="#inst-instrument-headers" aria-label="Permalink to &quot;\`inst\` - Instrument headers&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.instrumentHeaders</code></p><p>This chunk contains instrument info with one record per instrument.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] instrumentName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;instrumentName&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 20 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instrumentZoneId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 22 byte</span></span></code></pre></div><p>A terminal record is required to signify end of <code>inst</code> chunk. All values are zero except:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] instrumentName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;EOP&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Indicate end of chunck</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instrumentZoneId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Number of instrument zones</span></span></code></pre></div><h2 id="ibag-instrument-zone-indices" tabindex="-1"><code>ibag</code> - Instrument zone indices <a class="header-anchor" href="#ibag-instrument-zone-indices" aria-label="Permalink to &quot;\`ibag\` - Instrument zone indices&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.instrumentZones</code></p><p>List instrument zones. The generator is the output of the modulator.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> generatorId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modulatorId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 4 byte total</span></span></code></pre></div><h2 id="imod-instrument-modulators" tabindex="-1"><code>imod</code> - Instrument modulators <a class="header-anchor" href="#imod-instrument-modulators" aria-label="Permalink to &quot;\`imod\` - Instrument modulators&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.instrumentModulators</code></p><p>Defines an instrument modulator. See <a href="#pmod-preset-modulators"><code>pmod</code></a> for structure.</p><h2 id="igen-instrument-generators" tabindex="-1"><code>igen</code> - Instrument generators <a class="header-anchor" href="#igen-instrument-generators" aria-label="Permalink to &quot;\`igen\` - Instrument generators&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.instrumentGenerators</code></p><p>Defines an instrument generator. See <a href="#pgen-preset-generators"><code>pgen</code></a> for structure.</p><hr><p> </p><h2 id="shdr-sample-headers" tabindex="-1"><code>shdr</code> - Sample Headers <a class="header-anchor" href="#shdr-sample-headers" aria-label="Permalink to &quot;\`shdr\` - Sample Headers&quot;">​</a></h2><p>Accessible through <code>SoundFont3.presetData.sampleHeaders</code></p><p>This chunk contains sample info with one record per sample.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple records</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] sampleName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sampleName&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 20 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> startByte </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endByte </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> startLoopByte </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endLoopByte </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sampleRate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 44100</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 4 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> originalPitch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 1 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pitchCorrection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 1 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> romSampleLink </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> romSampleType </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 2 byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Multiple 46 byte</span></span></code></pre></div><p>A terminal record is required to signify end of <code>shdr</code> chunk. All values are zero except:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] instrumentName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;EOS&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Indicate end of chunck</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint16_t[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instrumentZoneId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 88</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Number of samples</span></span></code></pre></div>`,59),l=[p];function k(r,d,o,c,g,y){return a(),i("div",null,l)}const D=s(h,[["render",k]]);export{E as __pageData,D as default};
