import{_ as e,c as o,o as t,a3 as a}from"./chunks/framework.Bwxt4t8n.js";const k=JSON.parse('{"title":"SoundFont 2.04 Specification","description":"","frontmatter":{"prev":{"text":"1.2. Play SoundFont","link":"/routes/1.%20Guide/1.2.%20Play%20SoundFont.html"},"next":{"text":"3. SF 3 Spec","link":"/routes/3.%20SF%203%20Spec/README.html"}},"headers":[],"relativePath":"routes/2. SF 2.04 Spec/README.md","filePath":"routes/2. SF 2.04 Spec/README.md","lastUpdated":1718900309000}'),n={name:"routes/2. SF 2.04 Spec/README.md"},i=a(`<h1 id="soundfont-2-04-specification" tabindex="-1">SoundFont 2.04 Specification <a class="header-anchor" href="#soundfont-2-04-specification" aria-label="Permalink to &quot;SoundFont 2.04 Specification&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Purpose</p><p>To understand the library API according to <a href="http://www.synthfont.com/sfspec24.pdf" target="_blank" rel="noreferrer">SoundFont 2.04</a> specification.</p><p>This section will alternate between specification summary and API documentation.</p></div><p>SoundFonts are <a href="https://johnloomis.org/cpe102/asgn/asgn1/riff.html" target="_blank" rel="noreferrer">RIFF</a> files. They contain metadata. The main data is arranged in the following format:</p><div style="background:WhiteSmoke;padding:1em;border-radius:0.5em;"><p><img src="https://i.imgur.com/c2Gud3u.png" alt="General Structure"></p></div><p>Multiple <code>preset zones</code> can reference one <code>instrument</code>.</p><p>Likewise, multiple <code>instrument zones</code> can reference one <code>sample</code>.</p><h2 id="what-is-riff" tabindex="-1">What is RIFF <a class="header-anchor" href="#what-is-riff" aria-label="Permalink to &quot;What is RIFF&quot;">​</a></h2><p>RIFF files consists of nested chunks of data - like JSON but binary:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]            chunkId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;RIFF&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32             chunkBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   21772728</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[chunkBytes]   chunkData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">anotherChunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4 bytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4 bytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;chunkBytes&#39; bytes</span></span></code></pre></div><p>Only chunks with <code>chunkId</code> <code>RIFF</code> and <code>LIST</code> can have subchunks.</p><h2 id="soundfont-minimal-riff" tabindex="-1">SoundFont minimal RIFF <a class="header-anchor" href="#soundfont-minimal-riff" aria-label="Permalink to &quot;SoundFont minimal RIFF&quot;">​</a></h2><p>Every SoundFont2 have these three chunks:</p><ul><li><code>INFO</code> chunk containing metadata.</li><li><code>sdta</code> chunk containing Wave Audio (WAV).</li><li><code>pdta</code> header containing the preset, instrument and sample headers.</li></ul><p>All the raw (unparsed) data is available in the <code>SoundFont3</code> class, as <code>metaData</code>, <code>sampleData</code> and <code>presetData</code>.</p><p><img src="https://i.imgur.com/BL8FvcC.png" alt="SoundFont2 RIFF chunks"></p><h2 id="soundfont-riff-structure" tabindex="-1">SoundFont RIFF structure <a class="header-anchor" href="#soundfont-riff-structure" aria-label="Permalink to &quot;SoundFont RIFF structure&quot;">​</a></h2><p><strong>Structure with corresponding api:</strong></p><p><code>sfbk</code> - Top level RIFF file format - <code>SoundFont3</code></p><p> </p><ul><li><p><em><strong><code>INFO</code> - Metadata - <code>SoundFont3.metaData</code></strong></em></p><ul><li><p><code>ifil</code> - SoundFont version - <code>SoundFont3.metaData.version</code></p></li><li><p><code>isng</code> - Sound engine - <code>SoundFont3.metaData.soundEngine</code></p></li><li><p><code>INAM</code> - SoundFont name - <code>SoundFont3.metaData.name</code></p><p><em>The other sub-chunks are optional</em></p></li><li><p><code>irom</code> - Sound ROM samples reference - <code>SoundFont3.metaData.rom</code></p></li><li><p><code>iver</code> - Sound ROM revision - <code>SoundFont3.metaData.romVersion</code></p></li><li><p><code>ICRD</code> - Creation mm/dd/yy - <code>SoundFont3.metaData.creationDate</code></p></li><li><p><code>IENG</code> - SoundFont author - <code>SoundFont3.metaData.author</code></p></li><li><p><code>IPDR</code> - For this product - <code>SoundFont3.metaData.product</code></p></li><li><p><code>ICOP</code> - Copyright - <code>SoundFont3.metaData.copyright</code></p></li><li><p><code>ICMT</code> - Comments - <code>SoundFont3.metaData.comments</code></p></li><li><p><code>ISFT</code> - Tool created SoundFont - <code>SoundFont3.metaData.createdBy</code></p></li></ul></li></ul><p> </p><ul><li><p><em><strong><code>sdta</code> - sample data.</strong></em></p><ul><li><p><code>smpl</code> - 16-bit WAV - <code>SoundFont3.sampleData</code></p></li><li><p><code>sm24</code> - Plus 8-bit WAV</p></li></ul></li></ul><p> </p><ul><li><p><em><strong><code>pdta</code> - Preset tree - <code>SoundFont3.presetData</code></strong></em></p><p><em>Preset data</em></p><ul><li><p><code>phdr</code> - Headers - <code>SoundFont3.presetData.presetHeaders</code></p></li><li><p><code>pbag</code> - Zone indices - <code>SoundFont3.presetData.presetZones</code></p></li><li><p><code>pmod</code> - Modulators - <code>SoundFont3.presetData.presetModulators</code></p></li><li><p><code>pgen</code> - Generators - <code>SoundFont3.presetData.presetGenerators</code></p></li></ul><p><em>Instrument data</em></p><ul><li><p><code>inst</code> - Headers - <code>SoundFont3.presetData.instrumentHeaders</code></p></li><li><p><code>ibag</code> - Zone indices - <code>SoundFont3.presetData.instrumentZones</code></p></li><li><p><code>imod</code> - Modulators - <code>SoundFont3.presetData.instrumentModulators</code></p></li><li><p><code>igen</code> - Generators - <code>SoundFont3.presetData.instrumentGenerators</code></p></li></ul><p><em>Sample data</em></p><ul><li><code>shdr</code> - Headers - <code>SoundFont3.presetData.sampleHeaders</code></li></ul></li></ul>`,24),s=[i];function d(c,p,l,r,u,h){return t(),o("div",null,s)}const F=e(n,[["render",d]]);export{k as __pageData,F as default};
