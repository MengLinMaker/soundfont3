import{_ as s,c as a,o as i,a3 as n}from"./chunks/framework.Bwxt4t8n.js";const E=JSON.parse('{"title":"Parse SoundFont","description":"","frontmatter":{"prev":{"text":"1. Guide","link":"/routes/1.%20Guide/README.html"},"next":{"text":"1.2. Play SoundFont","link":"/routes/1.%20Guide/1.2.%20Play%20SoundFont.html"}},"headers":[],"relativePath":"routes/1. Guide/1.1. Parse SoundFont.md","filePath":"routes/1. Guide/1.1. Parse SoundFont.md","lastUpdated":1719160364000}'),t={name:"routes/1. Guide/1.1. Parse SoundFont.md"},e=n(`<h1 id="parse-soundfont" tabindex="-1">Parse SoundFont <a class="header-anchor" href="#parse-soundfont" aria-label="Permalink to &quot;Parse SoundFont&quot;">​</a></h1><p>These examples mainly focus on extracting data.</p><p><code>SoundFont3</code> constructor expects a <code>Uint8Array</code> binary.</p><h2 id="with-node-js" tabindex="-1">With Node.js <a class="header-anchor" href="#with-node-js" aria-label="Permalink to &quot;With Node.js&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { readFileSync } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fs&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { SoundFont3 } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SoundFont3&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Do not specify any encoding</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> soundFontBuffer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> readFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;soundFontFile.sf3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> soundFont3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SoundFont3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(soundFontBuffer)</span></span></code></pre></div><h2 id="with-fetch" tabindex="-1">With fetch <a class="header-anchor" href="#with-fetch" aria-label="Permalink to &quot;With fetch&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { SoundFont3 } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SoundFont3&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/my-soundfont.sf3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arrayBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arrayBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Typecast ArrayBuffer to Uint8Array</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> soundFontBuffer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Uint8Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arrayBuffer)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> soundFont3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SoundFont3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(soundFontBuffer)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span></code></pre></div><h2 id="read-metadata" tabindex="-1">Read metadata <a class="header-anchor" href="#read-metadata" aria-label="Permalink to &quot;Read metadata&quot;">​</a></h2><div class="language-TypeScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> metaData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> soundFont3.metaData</span></span></code></pre></div><p>Example output:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  version: &#39;2.1&#39;,</span></span>
<span class="line"><span>  soundEngine: &#39;EMU8000&#39;,</span></span>
<span class="line"><span>  name: &#39;Yamaha-Grand-Lite&#39;,</span></span>
<span class="line"><span>  rom: undefined,</span></span>
<span class="line"><span>  romVersion: undefined,</span></span>
<span class="line"><span>  creationDate: undefined,</span></span>
<span class="line"><span>  author: undefined,</span></span>
<span class="line"><span>  product: undefined,</span></span>
<span class="line"><span>  copyright: &#39;Creative Commons&#39;,</span></span>
<span class="line"><span>  comments: undefined,</span></span>
<span class="line"><span>  createdBy: &#39;Polyphone&#39;</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,11),p=[e];function h(l,k,d,r,o,c){return i(),a("div",null,p)}const g=s(t,[["render",h]]);export{E as __pageData,g as default};
