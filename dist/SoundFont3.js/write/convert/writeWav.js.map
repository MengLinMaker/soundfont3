{"version":3,"file":"writeWav.js","sources":["../../../../src/write/convert/writeWav.ts"],"sourcesContent":["import { SampleData } from '../../types'\nimport { dataViewWriteString } from '../utils'\n\n/**\n * Converts a pcm int16 audio data to WAV file as a buffer.\n * @param sampleRate {number} - sample rate in Hertz - eg: 44100 Hz.\n * @param pcm16Buffer {Int16Array} - pcm int16 audio data.\n * @returns wavFileBuffer - WAV RIFF file as binary.\n */\nexport function pcm16BufferToWav(sampleRate: number, pcm16Buffer: SampleData) {\n  const channelCount = 1\n\n  const headerBuffer = new ArrayBuffer(44)\n  const headerView = new DataView(headerBuffer)\n\n  /* RIFF identifier */\n  dataViewWriteString(headerView, 0, 'RIFF')\n  /* RIFF chunk length */\n  headerView.setUint32(4, 44 + pcm16Buffer.byteLength, true)\n  /* RIFF type */\n  dataViewWriteString(headerView, 8, 'WAVE')\n  /* format chunk identifier */\n  dataViewWriteString(headerView, 12, 'fmt ')\n  /* format chunk length */\n  headerView.setUint32(16, 16, true)\n  /* sample format (raw) */\n  headerView.setUint16(20, 1, true)\n  /* channel count */\n  headerView.setUint16(22, channelCount, true)\n  /* sample rate */\n  headerView.setUint32(24, sampleRate, true)\n  /* byte rate (sample rate * block align) */\n  headerView.setUint32(28, sampleRate * channelCount * 2, true)\n  /* block align (channel count * bytes per sample) */\n  headerView.setUint16(32, channelCount * 2, true)\n  /* bits per sample */\n  headerView.setUint16(34, 16, true)\n  /* data chunk identifier */\n  dataViewWriteString(headerView, 36, 'data')\n  /* data chunk length */\n  headerView.setUint32(40, 8 + pcm16Buffer.byteLength, true)\n\n  // Append pcm16 data\n  const wavFileBuffer = Buffer.concat([Buffer.from(headerBuffer), Buffer.from(pcm16Buffer)])\n  return wavFileBuffer\n}\n"],"names":["sampleRate","pcm16Buffer","headerBuffer","ArrayBuffer","headerView","DataView","dataViewWriteString","setUint32","byteLength","setUint16","channelCount","Buffer","concat","from"],"mappings":"mEASgB,SAAiBA,EAAoBC,GACnD,MAEMC,EAAe,IAAIC,YAAY,IAC/BC,EAAa,IAAIC,SAASH,GA+BzB,OA5BaI,EAAAA,oBAAAF,EAAY,EAAG,QAEnCA,EAAWG,UAAU,EAAG,GAAKN,EAAYO,YAAY,GAEjCF,EAAAA,oBAAAF,EAAY,EAAG,QAEfE,EAAAA,oBAAAF,EAAY,GAAI,QAEzBA,EAAAG,UAAU,GAAI,IAAI,GAElBH,EAAAK,UAAU,GAAI,GAAG,GAEjBL,EAAAK,UAAU,GAlBA,GAkBkB,GAE5BL,EAAAG,UAAU,GAAIP,GAAY,GAErCI,EAAWG,UAAU,GAtBA,EAsBIP,EAA4B,GAAG,GAExDI,EAAWK,UAAU,GAAIC,GAAkB,GAEhCN,EAAAK,UAAU,GAAI,IAAI,GAETH,EAAAA,oBAAAF,EAAY,GAAI,QAEpCA,EAAWG,UAAU,GAAI,EAAIN,EAAYO,YAAY,GAG/BG,OAAOC,OAAO,CAACD,OAAOE,KAAKX,GAAeS,OAAOE,KAAKZ,IAE9E"}