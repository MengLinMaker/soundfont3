{"version":3,"file":"writePresetDataChunk.js","sources":["../../../../src/write/soundFont/writePresetDataChunk.ts"],"sourcesContent":["import { SF_PDTA_CHUNKS_ID } from '../../constants'\nimport { PresetData } from '../../types'\nimport { writeRiffSubChunk, writeRiffTopChunk } from './writeRiffChunk'\nimport { concatBuffer } from '../utils'\n\n/**\n * Writes a preset data chunk buffer.\n * @param {string} string - raw string.\n * @param {number} desiredByte - parsed presetData info.\n * @return {Int8Array} Elongated string buffer.\n */\nconst extendStringBuffer = (string: string, desiredByte: number) => {\n  const textEncoder = new TextEncoder()\n  const stringBuffer = textEncoder.encode(string)\n  const padLength = desiredByte - stringBuffer.byteLength\n  if (padLength < 0) return stringBuffer.slice(0, desiredByte)\n  return concatBuffer(stringBuffer, new ArrayBuffer(padLength))\n}\n\n/**\n * Writes a preset data chunk buffer.\n * @param {PresetData} presetData - parsed presetData info.\n * @return {Buffer} Chunk buffer.\n */\nexport const writePresetDataChunk = (presetData: PresetData) => {\n  let presetDataBuffer = new Int8Array()\n\n  // Presets\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'phdr'\n    let loopBuffer = new Int8Array()\n    presetData.presetHeaders.map((e) => {\n      const nameBuffer = extendStringBuffer(e.name, 20)\n      const view = new DataView(new ArrayBuffer(18))\n      view.setUint16(0, e.preset, true)\n      view.setUint16(2, e.bank, true)\n      view.setUint16(4, e.bagIndex, true)\n      view.setUint32(6, e.library, true)\n      view.setUint32(10, e.genre, true)\n      view.setUint32(14, e.morphology, true)\n      loopBuffer = concatBuffer(loopBuffer, concatBuffer(nameBuffer, view.buffer))\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'pbag'\n    let loopBuffer = new Int8Array()\n    presetData.presetZones.map((e) => {\n      const view = new DataView(new ArrayBuffer(4))\n      view.setInt16(0, e.generatorIndex, true)\n      view.setInt16(2, e.modulatorIndex, true)\n      loopBuffer = concatBuffer(loopBuffer, view.buffer)\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'pmod'\n    let loopBuffer = new Int8Array()\n    presetData.presetModulators.map((e) => {\n      const view = new DataView(new ArrayBuffer(10))\n      view.setUint16(0, e.source.index, true)\n      view.setUint16(0, e.id, true)\n      view.setInt16(0, e.value, true)\n      view.setUint16(0, e.valueSource.index, true)\n      view.setUint16(0, e.transform, true)\n      loopBuffer = concatBuffer(loopBuffer, view.buffer)\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'pgen'\n    let loopBuffer = new Int8Array()\n    presetData.presetGenerators.map((e) => {\n      const view = new DataView(new ArrayBuffer(4))\n      view.setUint16(0, e.id, true)\n      const rangeDefined = typeof e.range !== 'undefined'\n      const valueDefined = typeof e.value !== 'undefined'\n      if (rangeDefined && valueDefined)\n        throw Error(\n          'Both \"range\" and \"value\" are defined in \"pgen\" when only one should be defined.'\n        )\n      else if (!rangeDefined && !valueDefined)\n        Error('Neither \"range\" nor \"value\" are defined in \"pgen\" when only one should be defined.')\n      else if (typeof e.range !== 'undefined') {\n        view.setUint8(2, e.range.lo)\n        view.setUint8(3, e.range.hi)\n      } else if (typeof e.value !== 'undefined') {\n        view.setUint16(2, e.value, true)\n      }\n      loopBuffer = concatBuffer(loopBuffer, view.buffer)\n    })\n    loopBuffer = concatBuffer(loopBuffer, new ArrayBuffer(4))\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n\n  // Instruments\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'inst'\n    let loopBuffer = new Int8Array()\n    presetData.instrumentHeaders.map((e) => {\n      const nameBuffer = extendStringBuffer(e.name, 20)\n      const view = new DataView(new ArrayBuffer(2))\n      view.setUint16(0, e.bagIndex, true)\n      loopBuffer = concatBuffer(loopBuffer, concatBuffer(nameBuffer, view.buffer))\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'ibag'\n    let loopBuffer = new Int8Array()\n    presetData.instrumentZones.map((e) => {\n      const view = new DataView(new ArrayBuffer(4))\n      view.setInt16(0, e.generatorIndex, true)\n      view.setInt16(2, e.modulatorIndex, true)\n      loopBuffer = concatBuffer(loopBuffer, view.buffer)\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'imod'\n    let loopBuffer = new Int8Array()\n    presetData.instrumentModulators.map((e) => {\n      const view = new DataView(new ArrayBuffer(10))\n      view.setUint16(0, e.source.index, true)\n      view.setUint16(0, e.id, true)\n      view.setInt16(0, e.value, true)\n      view.setUint16(0, e.valueSource.index, true)\n      view.setUint16(0, e.transform, true)\n      loopBuffer = concatBuffer(loopBuffer, view.buffer)\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'igen'\n    let loopBuffer = new Int8Array()\n    presetData.instrumentGenerators.map((e) => {\n      const view = new DataView(new ArrayBuffer(4))\n      view.setUint16(0, e.id, true)\n      const rangeDefined = typeof e.range !== 'undefined'\n      const valueDefined = typeof e.value !== 'undefined'\n      if (rangeDefined && valueDefined)\n        throw Error(\n          'Both \"range\" and \"value\" are defined in \"pgen\" when only one should be defined.'\n        )\n      else if (!rangeDefined && !valueDefined)\n        Error('Neither \"range\" nor \"value\" are defined in \"pgen\" when only one should be defined.')\n      else if (typeof e.range !== 'undefined') {\n        view.setUint8(2, e.range.lo)\n        view.setUint8(3, e.range.hi)\n      } else if (typeof e.value !== 'undefined') {\n        view.setUint16(2, e.value, true)\n      }\n      loopBuffer = concatBuffer(loopBuffer, view.buffer)\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n\n  // Samples\n  {\n    const chunkId: SF_PDTA_CHUNKS_ID = 'shdr'\n    let loopBuffer = new Int8Array()\n    presetData.sampleHeaders.map((e) => {\n      const nameBuffer = extendStringBuffer(e.name, 20)\n      const view = new DataView(new ArrayBuffer(26))\n      view.setUint32(0, e.start, true)\n      view.setUint32(4, e.end, true)\n      view.setUint32(8, e.start + e.startLoop, true)\n      view.setUint32(12, e.start + e.endLoop, true)\n      view.setUint32(16, e.sampleRate, true)\n      view.setUint8(20, e.originalPitch)\n      view.setInt8(21, e.pitchCorrection)\n      view.setUint16(22, e.link, true)\n      view.setUint16(24, e.type, true)\n      loopBuffer = concatBuffer(loopBuffer, concatBuffer(nameBuffer, view.buffer))\n    })\n    const chunkBuffer = writeRiffSubChunk(chunkId, loopBuffer)\n    presetDataBuffer = concatBuffer(presetDataBuffer, chunkBuffer)\n  }\n  return writeRiffTopChunk('LIST', 'pdta', presetDataBuffer)\n}\n"],"names":["extendStringBuffer","string","desiredByte","stringBuffer","TextEncoder","encode","padLength","byteLength","slice","concatBuffer","ArrayBuffer","presetData","presetDataBuffer","Int8Array","chunkId","loopBuffer","presetHeaders","map","e","nameBuffer","name","view","DataView","setUint16","preset","bank","bagIndex","setUint32","library","genre","morphology","buffer","chunkBuffer","writeRiffSubChunk","presetZones","setInt16","generatorIndex","modulatorIndex","presetModulators","source","index","id","value","valueSource","transform","presetGenerators","rangeDefined","range","valueDefined","Error","setUint8","lo","hi","instrumentHeaders","instrumentZones","instrumentModulators","instrumentGenerators","sampleHeaders","start","end","startLoop","endLoop","sampleRate","originalPitch","setInt8","pitchCorrection","link","type","writeRiffTopChunk"],"mappings":"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"}