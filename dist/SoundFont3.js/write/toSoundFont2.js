"use strict";var e=require("../soundFont3.js"),t=require("./writeSoundFont.js"),n=require("./utils.js");exports.toSoundFont2=async(r,a=`soundfont-${crypto.randomUUID()}`)=>{const o=structuredClone(r);if("undefined"!=typeof document)throw Error("WebCodecs not supported yet.");if(Number(o.metaData.version)<3)return r;const{existsSync:s,mkdirSync:i,readFileSync:d,rmdirSync:c,unlinkSync:u,writeFileSync:y}=await import("fs"),{execSync:p}=await import("child_process");s(a)||i(a);const m=[];let f=new Int8Array,h=0,w=0;return o.samples.map((e=>{const t=`${a}/${e.header.name}`,r=e.data.buffer;y(`${t}.ogg`,new Int8Array(e.data)),p(`ffmpeg -y -i "${t}.ogg" -ar ${e.header.sampleRate} -ac 1 "${t}.wav"`,{stdio:"ignore"});const o=d(`${t}.wav`),s=new Int8Array(o.slice(78,o.byteLength));u(`${t}.wav`),u(`${t}.ogg`);const i=new ArrayBuffer(2-s.byteLength%2);e.header.start=h,e.header.end=h+s.byteLength/2,e.header.startLoop+=w,e.header.endLoop+=w,f=n.concatBuffer(n.concatBuffer(f,s),i),h+=s.byteLength/2+i.byteLength,w+=r.byteLength,m.push(e.header)})),console.info(`Sample size: ${(f.byteLength/10**6).toFixed(3)} mb`),c(a),o.metaData.version="2.04",o.sampleData=new Int16Array(f),o.presetData.sampleHeaders=m,new e.SoundFont3(new Uint8Array(t.writeSoundFont(o)))};
//# sourceMappingURL=toSoundFont2.js.map
