"use strict";var e=require("../soundFont3.js"),r=require("./writeSoundFont.js"),t=require("./convert/writeWav.js");exports.toSoundFont3=async(o,a={bitrate:32,sampleRate:44100,oggCompressionAlgorithm:"vorbis"},n=`soundfont-${crypto.randomUUID()}`)=>{if("undefined"!=typeof document)throw Error("WebCodecs not supported yet.");const{existsSync:s,mkdirSync:i,readFileSync:d,rmdirSync:c,unlinkSync:m,writeFileSync:u}=await import("fs"),{execSync:f}=await import("child_process");s(n)||i(n);const p=structuredClone(o),g=Number(p.metaData.version);let h="wav",y=(e,r)=>t.pcm16BufferToWav(e,r);g>=3&&g<4&&(h="ogg",y=(e,r)=>Buffer.from(r));const l=[];let $=Buffer.from("");return p.samples.map((e=>{const r=`${n}/${e.header.name}`,t=y(e.header.sampleRate,new Int16Array(e.data));u(`${r}.${h}`,t),f(`ffmpeg -y -i "${r}.${h}" -ar ${a.sampleRate} -ab ${a.bitrate}k -acodec lib${a.oggCompressionAlgorithm} "${r}.ogg"`,{stdio:"ignore"});const o=d(`${r}.ogg`);m(`${r}.wav`),m(`${r}.ogg`);const s=Buffer.from(new ArrayBuffer(2-o.byteLength%2));e.header.start=$.byteLength,e.header.end=e.header.start+o.byteLength,e.header.startLoop-=e.header.start,e.header.endLoop-=e.header.start,l.push(e.header),$=Buffer.concat([$,o,s])})),c(n),p.metaData.version="3.1",p.sampleData=new Int16Array($),p.presetData.sampleHeaders=l,new e.SoundFont3(Buffer.from(r.writeSoundFont(p)))};
//# sourceMappingURL=toSoundFont3.js.map
