import{ParseError as r}from"./parseError.js";import{getStringFromBuffer as t}from"./utils.js";import{RIFFChunk as s}from"./riffChunk.js";const n=t=>{const n=u(t);if("RIFF"!==n)throw new r("Invalid file format","RIFF",n);const o=u(t,8);if("sfbk"!==o)throw new r("Invalid signature","sfbk",o);const a=t.subarray(8),f=e(a.subarray(4));return new s(n,a.length,a,f)},o=(r,t)=>{const n=u(r,t),o=a(r,t+4);let f=[];return"RIFF"!==n&&"LIST"!==n||(f=e(r.subarray(t+12))),new s(n,o,r.subarray(t+8),f)},a=(r,t)=>((r=r.subarray(t,t+4))[0]|r[1]<<8|r[2]<<16|r[3]<<24)>>>0,e=r=>{const t=[];let s=0;for(;s<=r.length-8;){const n=o(r,s);t.push(n),s+=8+n.length,s=s%2?s+1:s}return t},u=(r,s=0)=>t(r.subarray(s,s+4));export{o as getChunk,u as getChunkId,a as getChunkLength,e as getSubChunks,n as parseBuffer};
//# sourceMappingURL=parser.js.map
