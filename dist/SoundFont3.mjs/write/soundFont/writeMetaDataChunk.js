import{writeRiffSubChunk as e,writeRiffTopChunk as n}from"./writeRiffChunk.js";import{concatBuffer as t}from"../utils.js";const o=o=>{let r=new Int8Array;const c=new TextEncoder;{const n="ifil",c=o.version.split("."),i=new DataView(new ArrayBuffer(4));i.setUint16(0,Number(c[0]),!0),i.setUint16(2,Number(c[1]),!0);const s=e(n,i.buffer);r=t(r,s)}{const n=e("isng",c.encode(o.soundEngine),6);r=t(r,n)}{const n=e("INAM",c.encode(o.name),2);r=t(r,n)}if(o.rom){const n=e("irom",c.encode(o.rom),2);r=t(r,n)}if(o.romVersion){const n="iver",c=o.romVersion.split("."),i=new DataView(new ArrayBuffer(4));i.setUint16(0,Number(c[0])),i.setUint16(2,Number(c[1]));const s=e(n,i.buffer);r=t(r,s)}if(o.creationDate){const n=e("ICRD",c.encode(o.creationDate),2);r=t(r,n)}if(o.author){const n=e("IENG",c.encode(o.author),2);r=t(r,n)}if(o.product){const n=e("IPRD",c.encode(o.product),2);r=t(r,n)}if(o.copyright){const n=e("ICOP",c.encode(o.copyright),6);r=t(r,n)}if(o.comments){const n=e("ICMT",c.encode(o.comments),2);r=t(r,n)}if(o.createdBy){const n=e("ISFT",c.encode(o.createdBy),2);r=t(r,n)}return n("LIST","INFO",r)};export{o as writeMetaDataChunk};
//# sourceMappingURL=writeMetaDataChunk.js.map
