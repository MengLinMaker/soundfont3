{"version":3,"file":"toSoundFont2.js","sources":["../../../src/write/toSoundFont2.ts"],"sourcesContent":["import { SoundFont3 } from '../soundFont3'\nimport { writeSoundFont } from './writeSoundFont'\nimport { SampleHeader } from '../types/sample'\nimport { concatBuffer, SoundFont2Raw } from './utils'\n\nexport const toSoundFont2 = async (\n  _soundFont: SoundFont3,\n  folderPath = `soundfont-${crypto.randomUUID()}`\n) => {\n  const soundFont = structuredClone(_soundFont) as never as SoundFont2Raw\n  if (typeof document !== 'undefined') throw Error('WebCodecs not supported yet.')\n  const soundFontVersion = Number(soundFont.metaData.version)\n  if (soundFontVersion < 3) return _soundFont\n\n  const { existsSync, mkdirSync, readFileSync, rmdirSync, unlinkSync, writeFileSync } =\n    await import('fs')\n  const { execSync } = await import('child_process')\n  if (!existsSync(folderPath)) mkdirSync(folderPath)\n\n  const sampleHeaders: SampleHeader[] = []\n  let sampleBuffer = new Int8Array()\n  let sampleOffset = 0\n  let oggOffset = 0 // Undo OGG offset\n  soundFont.samples.map((sample) => {\n    const fileName = `${folderPath}/${sample.header.name}`\n    const oggBuffer = sample.data.buffer\n    writeFileSync(`${fileName}.ogg`, new Int8Array(sample.data))\n    execSync(\n      `ffmpeg -y -i \"${fileName}.ogg\" -ar ${sample.header.sampleRate} -ac 1 \"${fileName}.wav\"`,\n      {\n        stdio: 'ignore'\n      }\n    )\n    const wavFileBuffer = readFileSync(`${fileName}.wav`)\n    // Remove 44 byte header plus 34 byte extra\n    const wavBuffer = new Int8Array(wavFileBuffer.slice(44 + 34, wavFileBuffer.byteLength))\n\n    unlinkSync(`${fileName}.wav`)\n    unlinkSync(`${fileName}.ogg`)\n\n    const padBuffer = new ArrayBuffer(2 - (wavBuffer.byteLength % 2))\n    sample.header.start = sampleOffset\n    sample.header.end = sampleOffset + wavBuffer.byteLength / 2\n    sample.header.startLoop += oggOffset\n    sample.header.endLoop += oggOffset\n    sampleBuffer = concatBuffer(concatBuffer(sampleBuffer, wavBuffer), padBuffer)\n    sampleOffset += wavBuffer.byteLength / 2 + padBuffer.byteLength\n    oggOffset += oggBuffer.byteLength\n    sampleHeaders.push(sample.header)\n  })\n  console.info(`Sample size: ${(sampleBuffer.byteLength / 10 ** 6).toFixed(3)} mb`)\n  rmdirSync(folderPath)\n\n  soundFont.metaData.version = '2.04'\n  soundFont.sampleData = new Int16Array(sampleBuffer)\n  soundFont.presetData.sampleHeaders = sampleHeaders\n  return new SoundFont3(new Uint8Array(writeSoundFont(soundFont)))\n}\n"],"names":["toSoundFont2","async","_soundFont","folderPath","crypto","randomUUID","soundFont","structuredClone","document","Error","Number","metaData","version","existsSync","mkdirSync","readFileSync","rmdirSync","unlinkSync","writeFileSync","import","execSync","sampleHeaders","sampleBuffer","Int8Array","sampleOffset","oggOffset","samples","map","sample","fileName","header","name","oggBuffer","data","buffer","sampleRate","stdio","wavFileBuffer","wavBuffer","slice","byteLength","padBuffer","ArrayBuffer","start","end","startLoop","endLoop","concatBuffer","push","console","info","toFixed","sampleData","Int16Array","presetData","SoundFont3","Uint8Array","writeSoundFont"],"mappings":"6IAKa,MAAAA,EAAeC,MAC1BC,EACAC,EAAa,aAAaC,OAAOC,kBAE3B,MAAAC,EAAYC,gBAAgBL,GAClC,GAAwB,oBAAbM,SAA0B,MAAMC,MAAM,gCAE7C,GADqBC,OAAOJ,EAAUK,SAASC,SAC5B,EAAU,OAAAV,EAE3B,MAAAW,WAAEA,EAAYC,UAAAA,EAAAC,aAAWA,EAAcC,UAAAA,EAAAC,WAAWA,gBAAYC,SAC5DC,OAAO,OACTC,SAAEA,SAAmBD,OAAO,iBAC7BN,EAAWV,MAAuBA,GAEvC,MAAMkB,EAAgC,GAClC,IAAAC,EAAe,IAAIC,UACnBC,EAAe,EACfC,EAAY,EAkChB,OAjCUnB,EAAAoB,QAAQC,KAAKC,IACrB,MAAMC,EAAW,GAAG1B,KAAcyB,EAAOE,OAAOC,OAC1CC,EAAYJ,EAAOK,KAAKC,OAC9BhB,EAAc,GAAGW,QAAgB,IAAIN,UAAUK,EAAOK,OACtDb,EACE,iBAAiBS,cAAqBD,EAAOE,OAAOK,qBAAqBN,SACzE,CACEO,MAAO,WAGX,MAAMC,EAAgBtB,EAAa,GAAGc,SAEhCS,EAAY,IAAIf,UAAUc,EAAcE,MAAM,GAASF,EAAcG,aAEhEvB,EAAA,GAAGY,SACHZ,EAAA,GAAGY,SAEd,MAAMY,EAAY,IAAIC,YAAY,EAAKJ,EAAUE,WAAa,GAC9DZ,EAAOE,OAAOa,MAAQnB,EACtBI,EAAOE,OAAOc,IAAMpB,EAAec,EAAUE,WAAa,EAC1DZ,EAAOE,OAAOe,WAAapB,EAC3BG,EAAOE,OAAOgB,SAAWrB,EACzBH,EAAeyB,EAAaA,EAAazB,EAAcgB,GAAYG,GACnDjB,GAAAc,EAAUE,WAAa,EAAIC,EAAUD,WACrDf,GAAaO,EAAUQ,WACTnB,EAAA2B,KAAKpB,EAAOE,OAAM,IAE1BmB,QAAAC,KAAK,iBAAiB5B,EAAakB,WAAa,IAAM,GAAGW,QAAQ,SACzEnC,EAAUb,GAEVG,EAAUK,SAASC,QAAU,OACnBN,EAAA8C,WAAa,IAAIC,WAAW/B,GACtChB,EAAUgD,WAAWjC,cAAgBA,EAC9B,IAAIkC,EAAW,IAAIC,WAAWC,EAAenD,IAAW"}